!function(){function e(e,t){for(var n=0;n<t.length;n++){var a=t[n];a.enumerable=a.enumerable||!1,a.configurable=!0,"value"in a&&(a.writable=!0),Object.defineProperty(e,a.key,a)}}function t(t,n,a){return n&&e(t.prototype,n),a&&e(t,a),t}function n(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function a(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&o(e,t)}function o(e,t){return(o=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e})(e,t)}function i(e){var t=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(e){return!1}}();return function(){var n,a=l(e);if(t){var o=l(this).constructor;n=Reflect.construct(a,arguments,o)}else n=a.apply(this,arguments);return s(this,n)}}function s(e,t){return!t||"object"!=typeof t&&"function"!=typeof t?function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e):t}function l(e){return(l=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)})(e)}(window.webpackJsonp=window.webpackJsonp||[]).push([[19],{"0aUR":function(e,t,n){"use strict";n.r(t),t.default="import { Component, OnInit } from '@angular/core';\nimport { BaseModel } from '@webblocksapp/ng-data-groups';\nimport { ExampleDto } from './example.dto';\n\n@Component({\n  selector: 'running-code',\n  templateUrl: './running-code.component.html',\n})\nexport class RunningCodeComponent implements OnInit {\n  public modelConfigs = { highlightOnValid: true };\n  public exampleModel: BaseModel = new BaseModel(ExampleDto, {\n    configs: this.modelConfigs,\n  });\n  public output: string;\n  public isValid: boolean;\n\n  private sampleData: ExampleDto = {\n    email: 'test@mail.com',\n    city: 2,\n    favoriteFoods: [3, 1],\n  };\n\n  public cities = [\n    { value: 1, viewValue: 'Bogot\xe1' },\n    { value: 2, viewValue: 'Medell\xedn' },\n    { value: 3, viewValue: 'Cartagena' },\n    { value: 4, viewValue: 'Santander' },\n  ];\n\n  public favoriteFoods = [\n    { value: 1, viewValue: 'Pizza' },\n    { value: 2, viewValue: 'Ice cream' },\n    { value: 3, viewValue: 'Hamburger' },\n    { value: 4, viewValue: 'Hot dog' },\n  ];\n\n  ngOnInit(): void {\n    this.exampleModel.onEnterPress(() => this.submit());\n  }\n\n  public populate(): void {\n    this.isValid = undefined;\n    this.exampleModel.fill(this.sampleData);\n  }\n\n  public clear(): void {\n    this.isValid = undefined;\n    this.exampleModel.reset();\n  }\n\n  public submit(): void {\n    this.exampleModel.validate().then((validationResult) => {\n      const { isValid, errors, validatedData } = validationResult;\n      this.isValid = isValid;\n\n      if (isValid) {\n        //Send the data to backend\n        this.output = JSON.stringify(validatedData, null, 2);\n      } else {\n        //(Optional) write your logic when data is invalid\n        this.output = JSON.stringify(errors, null, 2);\n      }\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.exampleModel.unbindOnEnterPress();\n  }\n}\n"},L4Dr:function(e,t,n){"use strict";n.r(t),t.default='<div>\n  <bs-input\n    [model]="exampleModel"\n    label="Email"\n    name="email"\n    placeholder="example@mail.com"\n  ></bs-input>\n  <bs-select2\n    [model]="exampleModel"\n    placeholder="Select one city"\n    label="City"\n    name="city"\n    [options]="cities"\n  ></bs-select2>\n  <bs-select\n    [model]="exampleModel"\n    placeholder="Select at least one food"\n    label="Favorite foods"\n    name="favoriteFoods"\n    [options]="favoriteFoods"\n    [multiple]="true"\n  ></bs-select>\n  <button class="btn btn-primary" (click)="submit()">Submit</button>\n  <button type="button" class="btn ml-3 btn-secondary" (click)="populate()">\n    Populate\n  </button>\n  <button type="button" class="btn ml-3 btn-info" (click)="clear()">\n    Clear\n  </button>\n</div>\n<div *ngIf="isValid === false" class="alert alert-danger mt-3">\n  <pre>\n    <code [highlight]="output"></code>\n  </pre>\n</div>\n<div *ngIf="isValid === true" class="alert alert-success mt-3">\n  <pre>\n    <code [highlight]="output"></code>\n  </pre>\n</div>\n'},SRiM:function(e,t,n){"use strict";n.r(t),t.default="import { Component } from '@angular/core';\nimport { BaseModel } from '@webblocksapp/ng-data-groups';\nimport { ExampleDto } from './example.dto';\n\n@Component({\n  selector: 'running-code',\n  templateUrl: './running-code.component.html',\n})\nexport class RunningCodeComponent {\n  public exampleModel: BaseModel = new BaseModel(ExampleDto);\n  public output: string;\n  public isValid: boolean;\n\n  private sampleData: ExampleDto = {\n    email: 'test@mail.com',\n    city: 2,\n    favoriteFoods: [3, 1],\n  };\n\n  public cities = [\n    { value: 1, viewValue: 'Bogot\xe1' },\n    { value: 2, viewValue: 'Medell\xedn' },\n    { value: 3, viewValue: 'Cartagena' },\n    { value: 4, viewValue: 'Santander' },\n  ];\n\n  public favoriteFoods = [\n    { value: 1, viewValue: 'Pizza' },\n    { value: 2, viewValue: 'Ice cream' },\n    { value: 3, viewValue: 'Hamburger' },\n    { value: 4, viewValue: 'Hot dog' },\n  ];\n\n  public populate(): void {\n    this.isValid = undefined;\n    this.exampleModel.fill(this.sampleData);\n  }\n\n  public clear(): void {\n    this.isValid = undefined;\n    this.exampleModel.reset();\n  }\n\n  public submit(event): void {\n    event.then((validationResult) => {\n      const { isValid, errors, validatedData } = validationResult;\n      this.isValid = isValid;\n\n      if (isValid) {\n        //Send the data to backend\n        this.output = JSON.stringify(validatedData, null, 2);\n      } else {\n        //(Optional) write your logic when data is invalid\n        this.output = JSON.stringify(errors, null, 2);\n      }\n    });\n  }\n}\n"},cylb:function(e,t,n){"use strict";n.r(t),t.default="import {\n  IsArray,\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  ArrayMinSize,\n} from '@webblocksapp/class-validator';\n\nexport class ExampleDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  city: number;\n\n  @IsNumber({}, { each: true })\n  @ArrayMinSize(1)\n  @IsArray()\n  favoriteFoods: number[];\n}\n"},u6tm:function(e,t,n){"use strict";n.r(t),t.default='<data-groups\n  (submitEvent)="submit($event)"\n  [model]="exampleModel"\n  [highlightOnValid]="true"\n>\n  <data-group>\n    <bs-input\n      #dataInput\n      label="Email"\n      name="email"\n      placeholder="example@mail.com"\n    ></bs-input>\n    <bs-select\n      #dataInput\n      placeholder="Select one city"\n      label="City"\n      name="city"\n      [options]="cities"\n    ></bs-select>\n    <bs-select\n      #dataInput\n      placeholder="Select at least one food"\n      label="Favorite foods"\n      name="favoriteFoods"\n      [options]="favoriteFoods"\n      [multiple]="true"\n    ></bs-select>\n  </data-group>\n  <button class="btn btn-primary">Submit</button>\n  <button type="button" class="btn ml-3 btn-secondary" (click)="populate()">\n    Populate\n  </button>\n  <button type="button" class="btn ml-3 btn-info" (click)="clear()">\n    Clear\n  </button>\n</data-groups>\n<div *ngIf="isValid === false" class="alert alert-danger mt-3">\n  <pre>\n    <code [highlight]="output"></code>\n  </pre>\n</div>\n<div *ngIf="isValid === true" class="alert alert-success mt-3">\n  <pre>\n    <code [highlight]="output"></code>\n  </pre>\n</div>\n'},uIF6:function(e,t,n){"use strict";n.r(t),t.default="import {\n  IsArray,\n  IsEmail,\n  IsNotEmpty,\n  IsNumber,\n  ArrayMinSize,\n} from '@webblocksapp/class-validator';\n\nexport class ExampleDto {\n  @IsEmail()\n  @IsNotEmpty()\n  email: string;\n\n  @IsNumber()\n  @IsNotEmpty()\n  city: number;\n\n  @IsNumber({}, { each: true })\n  @ArrayMinSize(1)\n  @IsArray()\n  favoriteFoods: number[];\n}\n"},vA1R:function(e,o,s){"use strict";s.r(o),s.d(o,"IndexModule",(function(){return se}));var l,c,r,d=s("ofXK"),u=s("PCNd"),b=s("tyNb"),p=s("gtvE"),m=s("fXoL"),h=s("ABAs"),f=s("CB9U"),v=((l=function(e){a(o,e);var t=i(o);function o(){var e;return n(this,o),(e=t.apply(this,arguments)).callableProperties=[{name:"public isValid: boolean",description:"Show if the model's data is valid. By default is <code>false</code>"},{name:"public isSubmitted: boolean",description:"Show if the model's data has been submitted. By default is <code>false</code>"}],e.callableMethods=[{name:"public getDto(): any",description:"Get the current model's filled data."},{name:"public setValue(path: string, value: any): void",description:"Sets the value of the model's DTO attribute. The <code>path</code> is the model's DTO attribute and the <code>value</code> is the data with which will be filled."},{name:"public getValue(path: string): any",description:"Gets the value of the model's DTO attribute. The <code>path</code> is the model's DTO attribute."},{name:"public fill(data: any): void",description:"Fills the model's DTO with the provided data."},{name:"public validate(validatorOptions?: ValidatorOptions): Promise<ValidationResult>",description:"Validates all the model's DTO data."},{name:"public validateField(fieldName: string, validatorOptions?: ValidatorOptions): Promise<ValidationResult>",description:"Validates an specific attribute of the model's DTO data."},{name:"public reset(): void",description:"Clears all the model's DTO data."},{name:"public onEnterPress(callback: Function): void",description:"Subscribes to enter press event to trigger a callback function."},{name:"public unbindOnEnterPress(): void",description:"Unsubscribes from enter press listener."}],e}return o}(p.a)).\u0275fac=function(e){return g(e||l)},l.\u0275cmp=m.Db({type:l,selectors:[["app-api"]],features:[m.ub],decls:6,vars:2,consts:[[3,"data"]],template:function(e,t){1&e&&(m.Pb(0,"marker"),m.sc(1,"Callable Properties"),m.Ob(),m.Kb(2,"api-table",0),m.Pb(3,"marker"),m.sc(4,"Callable Methods"),m.Ob(),m.Kb(5,"api-table",0)),2&e&&(m.xb(2),m.bc("data",t.callableProperties),m.xb(3),m.bc("data",t.callableMethods))},directives:[h.a,f.a],encapsulation:2}),l),g=m.Rb(v),O=s("NiOw"),y=s("FKbk"),P=((c=function(e){a(o,e);var t=i(o);function o(){var e;return n(this,o),(e=t.apply(this,arguments)).routes=[{title:"Overview",path:"overview"},{title:"Api",path:"api"}],e}return o}(p.b)).\u0275fac=function(e){return w(e||c)},c.\u0275cmp=m.Db({type:c,selectors:[["app-data-groups"]],features:[m.ub],decls:6,vars:2,consts:[[3,"markers"],[1,"mb-4"],[3,"routes"],[1,"pt-3"],[3,"activate"]],template:function(e,t){1&e&&(m.Pb(0,"app-docs-container",0),m.Pb(1,"h5",1),m.sc(2,"Base Model"),m.Ob(),m.Kb(3,"app-tabs",2),m.Pb(4,"div",3),m.Pb(5,"router-outlet",4),m.Wb("activate",(function(e){return t.onActivate(e)})),m.Ob(),m.Ob(),m.Ob()),2&e&&(m.bc("markers",t.markers),m.xb(3),m.bc("routes",t.routes))},directives:[O.a,y.a,b.e],encapsulation:2}),c),w=m.Rb(P),x=s("KRIm"),V=s("oIZk"),I=s("uTO9"),M=s("mrSG"),k=s("hsmS"),D=s("6C12"),C=s("eB3s"),S=s("XJ2Q"),E=s("Sxtw"),B=(r=function e(){n(this,e)},Object(M.b)([Object(k.a)(),Object(D.a)()],r.prototype,"email",void 0),Object(M.b)([Object(C.a)(),Object(D.a)()],r.prototype,"city",void 0),Object(M.b)([Object(C.a)({},{each:!0}),Object(S.a)(1),Object(E.a)()],r.prototype,"favoriteFoods",void 0),r),F=s("c7wr"),j=s("mube"),T=s("VgVm"),N=s("TG4i"),R=s("OtPg");function K(e,t){if(1&e&&(m.Pb(0,"div",10),m.Pb(1,"pre"),m.sc(2,"    "),m.Kb(3,"code",11),m.sc(4,"\n  "),m.Ob(),m.Ob()),2&e){var n=m.Yb();m.xb(3),m.bc("highlight",n.output)}}function U(e,t){if(1&e&&(m.Pb(0,"div",12),m.Pb(1,"pre"),m.sc(2,"    "),m.Kb(3,"code",11),m.sc(4,"\n  "),m.Ob(),m.Ob()),2&e){var n=m.Yb();m.xb(3),m.bc("highlight",n.output)}}var A,H=((A=function(){function e(){n(this,e),this.exampleModel=new I.a(B),this.sampleData={email:"test@mail.com",city:2,favoriteFoods:[3,1]},this.cities=[{value:1,viewValue:"Bogot\xe1"},{value:2,viewValue:"Medell\xedn"},{value:3,viewValue:"Cartagena"},{value:4,viewValue:"Santander"}],this.favoriteFoods=[{value:1,viewValue:"Pizza"},{value:2,viewValue:"Ice cream"},{value:3,viewValue:"Hamburger"},{value:4,viewValue:"Hot dog"}]}return t(e,[{key:"populate",value:function(){this.isValid=void 0,this.exampleModel.fill(this.sampleData)}},{key:"clear",value:function(){this.isValid=void 0,this.exampleModel.reset()}},{key:"submit",value:function(e){var t=this;e.then((function(e){var n=e.isValid,a=e.errors,o=e.validatedData;t.isValid=n,t.output=n?JSON.stringify(o,null,2):JSON.stringify(a,null,2)}))}}]),e}()).\u0275fac=function(e){return new(e||A)},A.\u0275cmp=m.Db({type:A,selectors:[["running-code"]],decls:16,vars:7,consts:[[3,"model","highlightOnValid","submitEvent"],["label","Email","name","email","placeholder","example@mail.com"],["dataInput",""],["placeholder","Select one city","label","City","name","city",3,"options"],["placeholder","Select at least one food","label","Favorite foods","name","favoriteFoods",3,"options","multiple"],[1,"btn","btn-primary"],["type","button",1,"btn","ml-3","btn-secondary",3,"click"],["type","button",1,"btn","ml-3","btn-info",3,"click"],["class","alert alert-danger mt-3",4,"ngIf"],["class","alert alert-success mt-3",4,"ngIf"],[1,"alert","alert-danger","mt-3"],[3,"highlight"],[1,"alert","alert-success","mt-3"]],template:function(e,t){1&e&&(m.Pb(0,"data-groups",0),m.Wb("submitEvent",(function(e){return t.submit(e)})),m.Pb(1,"data-group"),m.Kb(2,"bs-input",1,2),m.Kb(4,"bs-select",3,2),m.Kb(6,"bs-select",4,2),m.Ob(),m.Pb(8,"button",5),m.sc(9,"Submit"),m.Ob(),m.Pb(10,"button",6),m.Wb("click",(function(){return t.populate()})),m.sc(11," Populate "),m.Ob(),m.Pb(12,"button",7),m.Wb("click",(function(){return t.clear()})),m.sc(13," Clear "),m.Ob(),m.Ob(),m.qc(14,K,5,1,"div",8),m.qc(15,U,5,1,"div",9)),2&e&&(m.bc("model",t.exampleModel)("highlightOnValid",!0),m.xb(4),m.bc("options",t.cities),m.xb(2),m.bc("options",t.favoriteFoods)("multiple",!0),m.xb(8),m.bc("ngIf",!1===t.isValid),m.xb(1),m.bc("ngIf",!0===t.isValid))},directives:[F.a,j.a,T.a,N.a,d.j,R.b],encapsulation:2}),A),z=function(){var e=function(){function e(){n(this,e)}return t(e,[{key:"ngOnInit",value:function(){this.htmlCode=s("u6tm").default,this.componentCode=s("SRiM").default,this.dtoCode=s("uIF6").default}}]),e}();return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=m.Db({type:e,selectors:[["demo-overview-1"]],decls:83,vars:3,consts:[["type","running-code"],["type","html","language","html",3,"code"],["type","component","language","typescript",3,"code"],["type","dto","language","typescript",3,"code"]],template:function(e,t){1&e&&(m.Pb(0,"marker"),m.sc(1,"Base Model with "),m.Pb(2,"code"),m.sc(3,"data-groups"),m.Ob(),m.Ob(),m.Pb(4,"code-example"),m.Pb(5,"code-block",0),m.Kb(6,"running-code"),m.Ob(),m.Pb(7,"code-block",1),m.Pb(8,"p"),m.sc(9," With the help of the "),m.Pb(10,"code"),m.sc(11,"data-groups"),m.Ob(),m.sc(12," component we can bind the "),m.Pb(13,"code"),m.sc(14,"BaseModel"),m.Ob(),m.sc(15," instance into each form UI component. Remember that the latter must extend from "),m.Pb(16,"code"),m.sc(17,"DataInputBase"),m.Ob(),m.sc(18," to take advantage of the "),m.Pb(19,"code"),m.sc(20,"BaseModel"),m.Ob(),m.sc(21," and must have the template variable "),m.Pb(22,"code"),m.sc(23,"#dataInput"),m.Ob(),m.sc(24," to make the model binding happens. "),m.Ob(),m.Pb(25,"p"),m.sc(26," Notice also that inside the "),m.Pb(27,"code"),m.sc(28,"data-groups"),m.Ob(),m.sc(29," selector, there must be a "),m.Pb(30,"code"),m.sc(31,"data-group"),m.Ob(),m.sc(32," component that wraps the form UI elements. This "),m.Pb(33,"code"),m.sc(34,"data-group"),m.Ob(),m.sc(35," selector will have more sense when we implement an instance of "),m.Pb(36,"code"),m.sc(37,"BaseModelArray"),m.Ob(),m.sc(38,". "),m.Ob(),m.Pb(39,"p"),m.sc(40," Also it's very important that each form UI element has a "),m.Pb(41,"code"),m.sc(42,"name"),m.Ob(),m.sc(43," attribute which it's value is the property registered on the model's DTO. "),m.Ob(),m.Pb(44,"p"),m.sc(45," Finally the "),m.Pb(46,"code"),m.sc(47,"data-groups"),m.Ob(),m.sc(48," selector wraps all our form UI elements into a native HTML "),m.Pb(49,"code"),m.sc(50,"form"),m.Ob(),m.sc(51," component. If you need to create a complex UI that is not a form but needs to pass, validate and submit data, take a look on to the "),m.Pb(52,"i"),m.sc(53,"Base Model without data-groups"),m.Ob(),m.sc(54," example. "),m.Ob(),m.Ob(),m.Pb(55,"code-block",2),m.Pb(56,"p"),m.sc(57," Here we can see the instance of the "),m.Pb(58,"code"),m.sc(59,"BaseModel"),m.Ob(),m.sc(60," initialized in the "),m.Pb(61,"code"),m.sc(62,"exampleModel"),m.Ob(),m.sc(63," property. It receives as parameter in the constructor the DTO class, which contains all the data attributes and validation rules. "),m.Ob(),m.Pb(64,"p"),m.sc(65," The "),m.Pb(66,"code"),m.sc(67,"BaseModel"),m.Ob(),m.sc(68," also provides us of useful methods to fill or clear our form UI with data. "),m.Ob(),m.Pb(69,"p"),m.sc(70," Finally, we can see how the submit action is handled thanks to the "),m.Pb(71,"code"),m.sc(72,"submitEvent"),m.Ob(),m.sc(73," from the "),m.Pb(74,"code"),m.sc(75,"data-groups"),m.Ob(),m.sc(76," component. It returns as event a promise that contains the validation status, errors and validated data ready to be send to the backend. "),m.Ob(),m.Ob(),m.Pb(77,"code-block",3),m.Pb(78,"p"),m.sc(79," On the DTO we find all the properties and validation rules to be loaded inside the "),m.Pb(80,"code"),m.sc(81,"BaseModel"),m.Ob(),m.sc(82," instance. "),m.Ob(),m.Ob(),m.Ob()),2&e&&(m.xb(7),m.bc("code",t.htmlCode),m.xb(48),m.bc("code",t.componentCode),m.xb(22),m.bc("code",t.dtoCode))},directives:[h.a,x.a,V.a,H],encapsulation:2}),e}(),J=function(){var e=function e(){n(this,e)};return Object(M.b)([Object(k.a)(),Object(D.a)()],e.prototype,"email",void 0),Object(M.b)([Object(C.a)(),Object(D.a)()],e.prototype,"city",void 0),Object(M.b)([Object(C.a)({},{each:!0}),Object(S.a)(1),Object(E.a)()],e.prototype,"favoriteFoods",void 0),e}(),G=s("o/Gt");function W(e,t){if(1&e&&(m.Pb(0,"div",8),m.Pb(1,"pre"),m.sc(2,"    "),m.Kb(3,"code",9),m.sc(4,"\n  "),m.Ob(),m.Ob()),2&e){var n=m.Yb();m.xb(3),m.bc("highlight",n.output)}}function _(e,t){if(1&e&&(m.Pb(0,"div",10),m.Pb(1,"pre"),m.sc(2,"    "),m.Kb(3,"code",9),m.sc(4,"\n  "),m.Ob(),m.Ob()),2&e){var n=m.Yb();m.xb(3),m.bc("highlight",n.output)}}var L,q,Y,X,Q,Z=function(){var e=function(){function e(){n(this,e),this.modelConfigs={highlightOnValid:!0},this.exampleModel=new I.a(J,{configs:this.modelConfigs}),this.sampleData={email:"test@mail.com",city:2,favoriteFoods:[3,1]},this.cities=[{value:1,viewValue:"Bogot\xe1"},{value:2,viewValue:"Medell\xedn"},{value:3,viewValue:"Cartagena"},{value:4,viewValue:"Santander"}],this.favoriteFoods=[{value:1,viewValue:"Pizza"},{value:2,viewValue:"Ice cream"},{value:3,viewValue:"Hamburger"},{value:4,viewValue:"Hot dog"}]}return t(e,[{key:"ngOnInit",value:function(){var e=this;this.exampleModel.onEnterPress((function(){return e.submit()}))}},{key:"populate",value:function(){this.isValid=void 0,this.exampleModel.fill(this.sampleData)}},{key:"clear",value:function(){this.isValid=void 0,this.exampleModel.reset()}},{key:"submit",value:function(){var e=this;this.exampleModel.validate().then((function(t){var n=t.isValid,a=t.errors,o=t.validatedData;e.isValid=n,e.output=n?JSON.stringify(o,null,2):JSON.stringify(a,null,2)}))}},{key:"ngOnDestroy",value:function(){this.exampleModel.unbindOnEnterPress()}}]),e}();return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=m.Db({type:e,selectors:[["running-code"]],decls:12,vars:8,consts:[["label","Email","name","email","placeholder","example@mail.com",3,"model"],["placeholder","Select one city","label","City","name","city",3,"model","options"],["placeholder","Select at least one food","label","Favorite foods","name","favoriteFoods",3,"model","options","multiple"],[1,"btn","btn-primary",3,"click"],["type","button",1,"btn","ml-3","btn-secondary",3,"click"],["type","button",1,"btn","ml-3","btn-info",3,"click"],["class","alert alert-danger mt-3",4,"ngIf"],["class","alert alert-success mt-3",4,"ngIf"],[1,"alert","alert-danger","mt-3"],[3,"highlight"],[1,"alert","alert-success","mt-3"]],template:function(e,t){1&e&&(m.Pb(0,"div"),m.Kb(1,"bs-input",0),m.Kb(2,"bs-select2",1),m.Kb(3,"bs-select",2),m.Pb(4,"button",3),m.Wb("click",(function(){return t.submit()})),m.sc(5,"Submit"),m.Ob(),m.Pb(6,"button",4),m.Wb("click",(function(){return t.populate()})),m.sc(7," Populate "),m.Ob(),m.Pb(8,"button",5),m.Wb("click",(function(){return t.clear()})),m.sc(9," Clear "),m.Ob(),m.Ob(),m.qc(10,W,5,1,"div",6),m.qc(11,_,5,1,"div",7)),2&e&&(m.xb(1),m.bc("model",t.exampleModel),m.xb(1),m.bc("model",t.exampleModel)("options",t.cities),m.xb(1),m.bc("model",t.exampleModel)("options",t.favoriteFoods)("multiple",!0),m.xb(7),m.bc("ngIf",!1===t.isValid),m.xb(1),m.bc("ngIf",!0===t.isValid))},directives:[T.a,G.a,N.a,d.j,R.b],encapsulation:2}),e}(),$=function(){var e=function(){function e(){n(this,e)}return t(e,[{key:"ngOnInit",value:function(){this.htmlCode=s("L4Dr").default,this.componentCode=s("0aUR").default,this.dtoCode=s("cylb").default}}]),e}();return e.\u0275fac=function(t){return new(t||e)},e.\u0275cmp=m.Db({type:e,selectors:[["demo-overview-2"]],decls:70,vars:3,consts:[["type","running-code"],["type","html","language","html",3,"code"],["type","component","language","typescript",3,"code"],["type","dto","language","typescript",3,"code"]],template:function(e,t){1&e&&(m.Pb(0,"marker"),m.sc(1,"Base Model without "),m.Pb(2,"code"),m.sc(3,"data-groups"),m.Ob(),m.Ob(),m.Pb(4,"code-example"),m.Pb(5,"code-block",0),m.Kb(6,"running-code"),m.Ob(),m.Pb(7,"code-block",1),m.Pb(8,"p"),m.sc(9," On this example, we are not using the "),m.Pb(10,"code"),m.sc(11,"data-groups"),m.Ob(),m.sc(12," and "),m.Pb(13,"code"),m.sc(14,"data-group"),m.Ob(),m.sc(15," components. Instead of passing the "),m.Pb(16,"code"),m.sc(17,"BaseModel"),m.Ob(),m.sc(18," instance as property of the "),m.Pb(19,"code"),m.sc(20,"data-groups"),m.Ob(),m.sc(21," component, now the model must be passed as property of each form UI component. "),m.Ob(),m.Pb(22,"p"),m.sc(23," This way of using the "),m.Pb(24,"code"),m.sc(25,"BaseModel"),m.Ob(),m.sc(26," without "),m.Pb(27,"code"),m.sc(28,"data-groups"),m.Ob(),m.sc(29,", will let us to build more complex UI that need to pass, validate and submit data. "),m.Ob(),m.Ob(),m.Pb(30,"code-block",2),m.Pb(31,"p"),m.sc(32," Due to we lost the "),m.Pb(33,"code"),m.sc(34,"form"),m.Ob(),m.sc(35," native HTML component that wraps all the form UI components, now we need to subscribe to the model's event "),m.Pb(36,"code"),m.sc(37,"onEnterPress"),m.Ob(),m.sc(38," and pass as argument a "),m.Pb(39,"code"),m.sc(40,"submit"),m.Ob(),m.sc(41," event. With this all the form UI elements, bind to the "),m.Pb(42,"code"),m.sc(43,"BaseModel"),m.Ob(),m.sc(44," instance, will trigger the submit event when the "),m.Pb(45,"code"),m.sc(46,"Enter"),m.Ob(),m.sc(47," key is pressed, recovering the same behavior of a form without being a form. "),m.Ob(),m.Pb(48,"p"),m.sc(49," Also we need to code the "),m.Pb(50,"code"),m.sc(51,"submit"),m.Ob(),m.sc(52," method a little bit different: now we need to validate the model on the submit process. It will return again a promise of type "),m.Pb(53,"code"),m.sc(54,"ValidationResult"),m.Ob(),m.sc(55," that contains the validation status, errors and validated data ready to be send to the backend. "),m.Ob(),m.Pb(56,"p"),m.sc(57," Finally it's very important to unsubscribe from the "),m.Pb(58,"code"),m.sc(59,"onEnterPress"),m.Ob(),m.sc(60," event on the "),m.Pb(61,"code"),m.sc(62,"ngDestroy"),m.Ob(),m.sc(63," component's lifecycle to prevent a multiple subscription when the "),m.Pb(64,"code"),m.sc(65,"Enter"),m.Ob(),m.sc(66," key is pressed. "),m.Ob(),m.Ob(),m.Pb(67,"code-block",3),m.Pb(68,"p"),m.sc(69,"The DTO remains the same as the past example."),m.Ob(),m.Ob(),m.Ob()),2&e&&(m.xb(7),m.bc("code",t.htmlCode),m.xb(23),m.bc("code",t.componentCode),m.xb(37),m.bc("code",t.dtoCode))},directives:[h.a,x.a,V.a,Z],encapsulation:2}),e}(),ee=((L=function(e){a(o,e);var t=i(o);function o(){return n(this,o),t.apply(this,arguments)}return o}(p.a)).\u0275fac=function(e){return te(e||L)},L.\u0275cmp=m.Db({type:L,selectors:[["app-overview"]],features:[m.ub],decls:32,vars:0,consts:[["href","/docs/bootstrap/setup","target","blank"]],template:function(e,t){1&e&&(m.Pb(0,"p"),m.sc(1," The "),m.Pb(2,"code"),m.sc(3,"BaseModel"),m.Ob(),m.sc(4," class is where is defined all the data model that will receive a form UI or complex UI component that manage data and needs to validate it. A "),m.Pb(5,"code"),m.sc(6,"BaseModel"),m.Ob(),m.sc(7," instance can be injected only on components that have extended from the "),m.Pb(8,"code"),m.sc(9,"DataInputBase"),m.Ob(),m.sc(10," class. Main responsibilities of this class are to validate, fill and clear data from an UI component. "),m.Ob(),m.Pb(11,"p"),m.sc(12," A "),m.Pb(13,"code"),m.sc(14,"BaseModel"),m.Ob(),m.sc(15," instance can be used inside a "),m.Pb(16,"code"),m.sc(17,"data-groups"),m.Ob(),m.sc(18," component or independently. This second way is preferred if we are going to use a more complex UI that manage data that is not properly a form. "),m.Ob(),m.Pb(19,"p"),m.sc(20," For this examples, we are going to use the "),m.Pb(21,"a",0),m.sc(22,"Bootstrap 4.x Form Components"),m.Ob(),m.sc(23,". These extends from the "),m.Pb(24,"code"),m.sc(25,"DataInputBase"),m.Ob(),m.sc(26," class, making them compatible with the "),m.Pb(27,"code"),m.sc(28,"BaseModel"),m.Ob(),m.sc(29," instances. "),m.Ob(),m.Kb(30,"demo-overview-1"),m.Kb(31,"demo-overview-2"))},directives:[z,$],encapsulation:2}),L),te=m.Rb(ee),ne=[{path:"",redirectTo:"overview",pathMatch:"full"},{path:"",component:P,children:[{path:"overview",component:ee},{path:"api",component:v}]}],ae=((Q=function e(){n(this,e)}).\u0275mod=m.Hb({type:Q}),Q.\u0275inj=m.Gb({factory:function(e){return new(e||Q)},imports:[[b.d.forChild(ne)],b.d]}),Q),oe=((X=function e(){n(this,e)}).\u0275mod=m.Hb({type:X}),X.\u0275inj=m.Gb({factory:function(e){return new(e||X)},imports:[[u.a]]}),X),ie=((Y=function e(){n(this,e)}).\u0275mod=m.Hb({type:Y}),Y.\u0275inj=m.Gb({factory:function(e){return new(e||Y)},imports:[[u.a]]}),Y),se=((q=function e(){n(this,e)}).\u0275mod=m.Hb({type:q}),q.\u0275inj=m.Gb({factory:function(e){return new(e||q)},imports:[[d.b,u.a,ae,oe,ie]]}),q)}}])}();